@startuml
hide circle
hide empty members

skinparam padding 1


skinparam interface {
    backgroundColor #0faaff
}

skinparam component {
    backgroundColor #0faaff
}

    interface filesystem_API_L as "**filesystem API**"

    interface CM_API_L as "**Campus management API**"
    interface FM_API_L as "**Fleet management API**"
    interface Task_API_L as "**Task management API**"
    interface UM_API_L as "**User management API**"


    interface CampusM_L as "**Campus Management UI**"
    interface TaskM_L as "**Task Management UI**"
    interface FleetM_L as "**Fleet Management UI**"
    interface UserM_L as "**User Management UI**"

component [RobDroneGo_L] <<component>><<system(C4)>> as "RobDroneGo"{
    portout " " as p1_L #0faaff
    port " " as p2_L #0faaff
    port " " as p3_L #0faaff
    port " " as p4_L #0faaff
    port " " as p5_L #0faaff
    port " " as p6_L #0faaff
    port " " as p7_L #0faaff
    port " " as p8_L #0faaff
    port " " as p9_L #0faaff

    component [CM_L] <<component>> as "Campus Management"{
        port " " as pMD1_L #0faaff
        port " " as pMD2_L #0faaff
        portout " " as pMD3_L #0faaff
    }

    component [FM_L] <<component>> as "Fleet Management"{
        port " " as pFM1_L #0faaff
        port " " as pFM2_L #0faaff
        portout " " as pFM3_L #0faaff
    }

    component [TM_L] <<component>> as "Task Management"{
        port " " as pTM1_L #0faaff
        port " " as pTM2_L #0faaff
        portout " " as pTM3_L #0faaff
    }

    component [UM_L] <<component>> as "User Management"{
        port " " as pUM1_L #0faaff
        port " " as pUM2_L #0faaff
    }


    component [Planning_L] <<component>> as "Planning"{
        port " " as pp1_L #0faaff
        port " " as pp2_L #0faaff
        port " " as pp3_L #0faaff
    }

}

p1_L --( filesystem_API_L
CampusM_L -- p2_L
CM_API_L -- p3_L
TaskM_L -- p4_L
Task_API_L -- p5_L
FleetM_L -- p6_L
FM_API_L -- p7_L

pMD1_L -- p2_L
pMD2_L -- p3_L

pTM1_L -- p4_L
pTM2_L -- p5_L

pFM1_L -- p6_L
pFM2_L -- p7_L

pUM1_L -- p8_L
pUM2_L -- p9_L

pp1_L -u- pMD3_L
pp2_L -u- pTM3_L
pp3_L -u- pFM3_L

p8_L -u- UM_API_L
p9_L -u- UserM_L


skinparam node{
    backgroundColor #lightblue
}

skinparam componentFontStyle<<component>> bold

node "localhost:??" as Host_F {
  component "Browser" <<component>> as B{
    component UI <<component>> as "UI"
  }
}

node Remote_F as "Remote Server" {
    component CM <<component>> as "Campus Management"
    component FM <<component>> as "Fleet Management"
    component Planning <<component>> as "Planning"
    component TM <<component>> as "Task Management"
    component UM <<component>> as "User Management"
}




Host_F -d- Remote_F: http/s


[CM_L] -u.--- UI : manifest
pTM1_L -u.--- UI : manifest
pFM1_L -u.--- UI : manifest
pUM1_L -u.--- UI : manifest

[CM_L] -u.--- CM : manifest
pTM1_L -u.--- TM : manifest
pFM1_L -u.--- FM : manifest
pUM1_L -u.--- UM : manifest
[Planning_L] -u.--- Planning : manifest

[RobDroneGo_I] -d[hidden]--------- [RobDroneGo_L] : manifest


@enduml